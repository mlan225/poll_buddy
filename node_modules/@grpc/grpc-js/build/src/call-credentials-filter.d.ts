import { Call } from './call-stream';
<<<<<<< HEAD
import { Channel } from './channel';
=======
import { Http2Channel } from './channel';
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
import { BaseFilter, Filter, FilterFactory } from './filter';
import { Metadata } from './metadata';
export declare class CallCredentialsFilter extends BaseFilter implements Filter {
    private readonly channel;
    private readonly stream;
    private serviceUrl;
<<<<<<< HEAD
    constructor(channel: Channel, stream: Call);
=======
    constructor(channel: Http2Channel, stream: Call);
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
    sendMetadata(metadata: Promise<Metadata>): Promise<Metadata>;
}
export declare class CallCredentialsFilterFactory implements FilterFactory<CallCredentialsFilter> {
    private readonly channel;
<<<<<<< HEAD
    constructor(channel: Channel);
=======
    constructor(channel: Http2Channel);
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
    createFilter(callStream: Call): CallCredentialsFilter;
}
