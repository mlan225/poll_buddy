let nextHandle = 1;
<<<<<<< HEAD
const RESOLVED = (() => Promise.resolve())();
const activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
=======
const tasksByHandle = {};
function runIfPresent(handle) {
    const cb = tasksByHandle[handle];
    if (cb) {
        cb();
    }
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
}
export const Immediate = {
    setImmediate(cb) {
        const handle = nextHandle++;
<<<<<<< HEAD
        activeHandles[handle] = true;
        RESOLVED.then(() => findAndClearHandle(handle) && cb());
        return handle;
    },
    clearImmediate(handle) {
        findAndClearHandle(handle);
    },
};
export const TestTools = {
    pending() {
        return Object.keys(activeHandles).length;
    }
};
=======
        tasksByHandle[handle] = cb;
        Promise.resolve().then(() => runIfPresent(handle));
        return handle;
    },
    clearImmediate(handle) {
        delete tasksByHandle[handle];
    },
};
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
//# sourceMappingURL=Immediate.js.map