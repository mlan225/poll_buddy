declare module "domain" {
<<<<<<< HEAD
    import { EventEmitter } from "events";

    class Domain extends EventEmitter implements NodeJS.Domain {
        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
        add(emitter: EventEmitter | NodeJS.Timer): void;
        remove(emitter: EventEmitter | NodeJS.Timer): void;
        bind<T extends Function>(cb: T): T;
        intercept<T extends Function>(cb: T): T;
        members: Array<EventEmitter | NodeJS.Timer>;
=======
    import * as events from "events";

    class Domain extends events.EventEmitter implements NodeJS.Domain {
        run(fn: Function): void;
        add(emitter: events.EventEmitter): void;
        remove(emitter: events.EventEmitter): void;
        bind(cb: (err: Error, data: any) => any): any;
        intercept(cb: (data: any) => any): any;
        members: any[];
>>>>>>> 7667619318f2e7e4ad64e58abdc3812448859fd9
        enter(): void;
        exit(): void;
    }

    function create(): Domain;
}
